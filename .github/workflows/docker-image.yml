name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/my-app:latest
# Log in to DockerHub or another registry (replace with your registry)
    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    # Push the image to DockerHub or another registry
    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build  # This job will wait for the push job to complete
    steps:
      # Set up doctl (DigitalOcean CLI)
      - name: Install doctl
        run: |
          wget $(curl -s https://api.github.com/repos/digitalocean/doctl/releases/latest | grep "browser_download_url.*linux-amd64.tar.gz" | cut -d : -f 2,3 | tr -d \" )
          tar xf doctl-*-linux-amd64.tar.gz
          sudo mv doctl /usr/local/bin

      # Authenticate with DigitalOcean
      - name: Authenticate with DigitalOcean
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        run: doctl auth init -t $DIGITALOCEAN_ACCESS_TOKEN

      # Set up kubeconfig for the K8s cluster
      - name: Configure kubectl
        run: doctl k8s cluster kubeconfig save ${{ secrets.K8S_CLUSTER_NAME }}

      # Deploy to the Kubernetes cluster
      - name: Deploy to K8s
        run: kubectl rollout restart deployment/my-app
